openapi: 3.0.0
info:
  title: Red Matter
  description: API configuration
  version: 1.0.0
servers:
  - url: "https://www.redmatterapp.com"
tags:
  - name: Authentication
    description: Authentication and Authorization
  - name: Workspaces
    description: Workspaces
  - name: Workspace-Files
    description: Workspace Files
  - name: Graphs-Gates
    description: Graphs and Gates
  - name: User
    description: User
paths:
  /api/login:
    post:
      tags:
        - Authentication
      summary: User Login
      description: Let's user to login using Email and Password
      operationId: userLogin
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/body"
      responses:
        "200":
          description: Successful
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200"
        "400":
          description: Invalid Credentials
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_400"
  /api/register:
    post:
      tags:
        - Authentication
      summary: Creating User Account
      description: "User registration by entering Organisation, Location, Email and Password"
      operationId: userResigter
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/body_1"
      responses:
        "200":
          description: If successful then user will receive confirmation mail
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_1"
        "400":
          description: If User Exists or Internal Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_1"
  /api/feedback:
    post:
      tags:
        - User
      summary: Feedback
      description: "Recieving Feedback from user"
      operationId: feedback
      parameters:
        - name: token
          in: header
          description: token is passed in header
          required: true
          style: simple
          explode: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                feedback:
                  type: string
      responses:
        "200":
          description: Successful response
        "400":
          description: If User Exists or Internal Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_1"
  /api/userexpertorders:
    get:
      tags:
        - User
      summary: Getting User Order
      operationId: userexpertorders
      parameters:
        - name: token
          in: header
          description: token is passed in header
          required: true
          style: simple
          explode: false
          schema:
            type: string
      responses:
        "200":
          description: Getting Workspaces
          content:
            application/json:
              schema:
                type: array
                items:
                  description: Response
  /api/account:
    get:
      tags:
        - User
      summary: My Account
      operationId: getAccount
      parameters:
        - name: token
          in: header
          description: token is passed in header
          required: true
          style: simple
          explode: false
          schema:
            type: string
      responses:
        "200":
          description: Getting Workspaces
          content:
            application/json:
              schema:
                type: object
                description: Account details like email,location, organisation etc...

        "401":
          description: Unauthorized Errors
          content:
            text/plain:
              schema:
                type: string
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Error message
                  token:
                    type: string
  /api/updateaccount:
    post:
      tags:
        - User
      summary: Update User Account
      operationId: updateAccount
      parameters:
        - name: token
          in: header
          description: token is passed in header
          required: true
          style: simple
          explode: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              description: Pass account detail object with updated value
      responses:
        "200":
          description: If successful then user will receive confirmation mail
          content:
            application/json:
              schema:
                type: object
                properties:
                  email:
                    type: string
                  location:
                    type: string
                  token:
                    type: string
                  organisationId:
                    type: string
        "401":
          description: Unauthorized Errors
          content:
            text/plain:
              schema:
                type: string
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Error message
                  token:
                    type: string

  /api/workspaces:
    get:
      tags:
        - Workspaces
      summary: Getting Workspaces
      description: "To get workspaces, OrganisationId is passed in params"
      operationId: appWorkspace
      parameters:
        - name: organisationId
          in: query
          description: Organisation Id of logged in user
          required: true
          style: form
          explode: true
          schema:
            type: string
        - name: token
          in: header
          description: token is passed in header
          required: true
          style: simple
          explode: false
          schema:
            type: string
      responses:
        "200":
          description: Getting Workspaces
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_2"
  /api/create/workspace:
    post:
      tags:
        - Workspaces
      summary: Creating Workspaces
      description: "To create Workspace, we need to pass organisationId,workspace name and isPrivate in body of request"
      operationId: createWorkspace
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                organisationId:
                  type: string
                  description: Organisation Id
                name:
                  type: string
                  description: Name of workspace
                isPrivate:
                  type: boolean
                  description: private or public workspace
      parameters:
        - name: token
          in: header
          description: Generate token and pass it in header
          required: true
          style: simple
          explode: false
          schema:
            type: string
      responses:
        "200":
          description: Getting Token after edit
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
                  id:
                    type: string
                    description: Workspace id
                  name:
                    type: string
                    description: Workspace name
                  createdOn:
                    type: string
                    description: Workspace creation date
        "401":
          description: If Token is not passed, Unauthorized Errors
          content:
            text/plain:
              schema:
                type: string
        "400":
          description: If any one param is missing
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Error message
                  token:
                    type: string
  /api/workspace/edit:
    put:
      tags:
        - Workspaces
      summary: Editing Workspaces
      description: "To edit workspace, we need to pass workspaceId and workspaceName as query parameters"
      operationId: editWorkspace
      parameters:
        - name: workspaceId
          in: query
          description: WorkspaceId
          required: true
          explode: true
          schema:
            type: string
        - name: workspaceName
          in: query
          description: workspaceName
          required: true
          explode: true
          schema:
            type: string
        - name: token
          in: header
          description: Generate token and pass it in header
          required: true
          style: simple
          explode: false
          schema:
            type: string
      responses:
        "200":
          description: Getting Token after edit
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
        "401":
          description: Unauthorized Errors
          content:
            text/plain:
              schema:
                type: string
  /api/workspace/delete:
    delete:
      tags:
        - Workspaces
      summary: Deleting Workspaces
      description: "To delete workspace, we need to pass workspaceId and workspaceName as query parameters"
      operationId: deleteWorkspace
      parameters:
        - name: workspaceId
          in: query
          description: WorkspaceId
          required: true
          explode: true
          schema:
            type: string
        - name: token
          in: header
          description: Generate token and pass it in header
          required: true
          style: simple
          explode: false
          schema:
            type: string
      responses:
        "200":
          description: Getting Token after delete
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
        "401":
          description: Unauthorized Errors
          content:
            text/plain:
              schema:
                type: string
        "400":
          description: If any one param is missing
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Error message
                  token:
                    type: string

  /api/workspace/{workspaceId}/experiment:
    post:
      tags:
        - Experiment
      summary: Creating Experiment
      description: "To create Experiment, we need to pass workspaceId, data and details in body of request"
      operationId: createExperiment
      parameters:
        - name: token
          in: header
          description: Generate token and pass it in header
          required: true
          style: simple
          explode: false
          schema:
            type: string
        - name: workspaceId
          in: path
          description: Workspace id
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ExperimentPayload"
      responses:
        "200":
          description: Getting Token after edit
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
                  id:
                    type: string
                    description: experiment id
                  details:
                    type: object
                    description: experiment details
                  data:
                    type: string
                    description: experiment data
        "401":
          description: If Token is not passed, Unauthorized Errors
          content:
            text/plain:
              schema:
                type: string
        "400":
          description: If any one param is missing
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Error message
                  token:
                    type: string
  /api/workspace/{workspaceId}/experiments:
    get:
      tags:
        - Experiment
      summary: Get experiments
      description: "To get experiments, you must pass the target workspaceId"
      operationId: getExperiment
      parameters:
        - name: token
          in: header
          description: Generate token and pass it in header
          required: true
          style: simple
          explode: false
          schema:
            type: string
        - name: workspaceId
          in: path
          description: Workspace id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Getting Token after edit
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
                  id:
                    type: string
                    description: experiment id
                  details:
                    type: object
                    description: experiment details
                  data:
                    type: string
                    description: experiment data
        "401":
          description: If Token is not passed, Unauthorized Errors
          content:
            text/plain:
              schema:
                type: string
        "400":
          description: If any one param is missing
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Error message
                  token:
                    type: string
  /api/workspace/{workspaceId}/experiment/{experimentId}:
    put:
      tags:
        - Experiment
      summary: Creating Experiment
      description: "To create Experiment, we need to pass workspaceId, data and details in body of request"
      operationId: updateExperiment
      parameters:
        - name: token
          in: header
          description: Generate token and pass it in header
          required: true
          style: simple
          explode: false
          schema:
            type: string
        - name: workspaceId
          in: path
          description: Workspace id
          required: true
          schema:
            type: string
        - name: experimentId
          in: path
          description: Experiment id
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ExperimentPayload"
      responses:
        "200":
          description: Getting Token after edit
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
                  id:
                    type: string
                    description: experiment id
                  details:
                    $ref: "#/components/schemas/ExperimentDetailView"
                  data:
                    type: object
                    description: experiment data
        "401":
          description: If Token is not passed, Unauthorized Errors
          content:
            text/plain:
              schema:
                type: string
        "400":
          description: If any one param is missing
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Error message
                  token:
                    type: string

  /api/files:
    get:
      tags:
        - Workspace-Files
      summary: Getting Workspace Files
      description: "To get workspace files, we need to pass organisationId and workspaceId in query params"
      operationId: workspaceFiles
      parameters:
        - name: organisationId
          in: query
          description: Organisation Id of logged in user
          required: true
          style: form
          explode: true
          schema:
            type: string
        - name: workspaceId
          in: query
          description: Workspace Id
          required: true
          style: form
          explode: true
          schema:
            type: string
        - name: token
          in: header
          description: token is passed in header
          required: true
          style: simple
          explode: false
          schema:
            type: string
      responses:
        "200":
          description: Getting Workspaces
          content:
            application/json:
              schema:
                type: object
                properties:
                  workspaceName:
                    type: string
                    description: Name of workspace
                  filesRemaining:
                    type: integer
                    description: number of files remaining for user
                  availableUntil:
                    type: string
                    description: Exp. Date of workspace
                  monthlyFileCounter:
                    type: integer
                  isOwner:
                    type: boolean
                  token:
                    type: string
                  files:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                          description: Id of file
                        workspaceId:
                          type: string
                          description: Workspace Id
                        label:
                          type: string
                          description: Name of file
                        createdOn:
                          type: string
                          description: Date of creation
        "401":
          description: Unauthorized Errors
          content:
            text/plain:
              schema:
                type: string
        "400":
          description: If any one param is missing
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Error message
                  token:
                    type: string
  /api/upload:
    post:
      tags:
        - Workspace-Files
      summary: Upload fcs file
      description: "To uplaod fcs file we need to pass organisationId and workspaceId in form data"
      operationId: uploadFile
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                workspaceId:
                  type: string
                organisationId:
                  type: string
                file[0]:
                  type: string
                  format: binary
      parameters:
        - name: token
          in: header
          description: token is passed in header
          required: true
          style: simple
          explode: false
          schema:
            type: string
      responses:
        "200":
          description: Getting Token after edit
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
        "401":
          description: If Token is not passed, Unauthorized Errors
          content:
            text/plain:
              schema:
                type: string
        "400":
          description: If any one param is missing
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Error message
                  token:
                    type: string
  /api/file/edit:
    put:
      tags:
        - Workspace-Files
      summary: Editing Workspace File
      description: "To edit workspace file, we need to pass workspaceId, fileId and label as query parameters"
      operationId: editFiles
      parameters:
        - name: workspaceId
          in: query
          description: WorkspaceId
          required: true
          explode: true
          schema:
            type: string
        - name: fileId
          in: query
          description: File Id
          required: true
          explode: true
          schema:
            type: string
        - name: label
          in: query
          description: Edited File Label
          required: true
          explode: true
          schema:
            type: string
        - name: token
          in: header
          description: Generate token and pass it in header
          required: true
          style: simple
          explode: false
          schema:
            type: string
      responses:
        "200":
          description: Getting Token after edit
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
        "401":
          description: Unauthorized Errors
          content:
            text/plain:
              schema:
                type: string
        "400":
          description: If any one param is missing
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Error message
                  token:
                    type: string
  /api/files/delete:
    delete:
      tags:
        - Workspace-Files
      summary: Deleting Workspace File
      description: "To delete workspace file, we need to pass workspaceId and fileId as query parameters"
      operationId: deleteFile
      parameters:
        - name: workspaceId
          in: query
          description: WorkspaceId
          required: true
          explode: true
          schema:
            type: string
        - name: fileId
          in: query
          description: File Id
          required: true
          explode: true
          schema:
            type: string
        - name: token
          in: header
          description: Generate token and pass it in header
          required: true
          style: simple
          explode: false
          schema:
            type: string
      responses:
        "200":
          description: Getting Token after delete
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
        "401":
          description: Unauthorized Errors
          content:
            text/plain:
              schema:
                type: string
        "400":
          description: If any one param is missing
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Error message
                  token:
                    type: string

  /api/canvas/info:
    get:
      tags:
        - Graphs-Gates
      summary: Getting File Info
      operationId: fileInfo
      parameters:
        - name: organisationId
          in: query
          description: Organisation Id of logged in user
          required: true
          style: form
          explode: true
          schema:
            type: string
        - name: workspaceId
          in: query
          description: Workspace Id
          required: true
          style: form
          explode: true
          schema:
            type: string
        - name: id
          in: query
          description: File Id
          required: true
          style: form
          explode: true
          schema:
            type: string
        - name: token
          in: header
          description: token is passed in header
          required: true
          style: simple
          explode: false
          schema:
            type: string
      responses:
        "200":
          description: Getting file Info
          content:
            application/json:
              schema:
                type: object
                properties:
                  workspaceName:
                    type: string
                  version:
                    type: string
                  token:
                    type: string
                  path:
                    type: string
                  numParams:
                    type: integer
                  label:
                    type: string
                  eventCount:
                    type: integer
                  eventWarning:
                    type: boolean
                  analysis:
                    type: object
                    properties:
                      FCSVersion:
                        type: string
                      beginAnalysis:
                        type: integer
                      beginData:
                        type: integer
                      beginText:
                        type: integer
                      endAnalysis:
                        type: integer
                      endData:
                        type: integer
                      endText:
                        type: integer
                  files:
                    type: array
                    items:
                      type: object
                      properties:
                        createdOn:
                          type: string
                        id:
                          type: string
                        label:
                          type: string
                        workspaceId:
                          type: string
                  params:
                    type: array
                    items:
                      type: object
                      properties:
                        display:
                          type: string
                        key:
                          type: integer
                        value:
                          type: string
                  spillover:
                    type: object
                    properties:
                      spilloverParamLabels:
                        type: array
                        items:
                          type: string
                      spilloverValues:
                        type: array
                        items:
                          type: array
                          items:
                            type: string
                  text:
                    type: object
        "401":
          description: Unauthorized Errors
          content:
            text/plain:
              schema:
                type: string
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Error message
                  token:
                    type: string
  /api/get/statistics:
    get:
      tags:
        - Graphs-Gates
      summary: Getting Statistics
      operationId: statistics
      parameters:
        - name: organisationId
          in: query
          description: Organisation Id of logged in user
          required: true
          style: form
          explode: true
          schema:
            type: string
        - name: selectedGate
          in: query
          description: Selected Gate
          required: true
          style: form
          explode: true
          schema:
            type: string
        - name: id
          in: query
          description: File Id
          required: true
          style: form
          explode: true
          schema:
            type: string
        - name: token
          in: header
          description: token is passed in header
          required: true
          style: simple
          explode: false
          schema:
            type: string
      responses:
        "200":
          description: Getting Stats
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
                  statistics:
                    type: array
                    items:
                      type: object
                      description: statistics like count, gateName, percentage, color etc...
        "401":
          description: Unauthorized Errors
          content:
            text/plain:
              schema:
                type: string
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Error message
                  token:
                    type: string
  /api/get/gates:
    get:
      tags:
        - Graphs-Gates
      summary: Getting Gates
      operationId: getGates
      parameters:
        - name: workspaceId
          in: query
          description: Workspace Id
          required: true
          style: form
          explode: true
          schema:
            type: string
        - name: token
          in: header
          description: token is passed in header
          required: true
          style: simple
          explode: false
          schema:
            type: string
      responses:
        "200":
          description: Getting Gates
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  description: properties like color, gateLabel, gateName, gateType, index, paramX, paramY etc...
        "401":
          description: Unauthorized Errors
          content:
            text/plain:
              schema:
                type: string
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Error message
                  token:
                    type: string
  /api/get/graphs:
    get:
      tags:
        - Graphs-Gates
      summary: Getting Graphs
      operationId: getGraphs
      parameters:
        - name: workspaceId
          in: query
          description: Workspace Id
          required: true
          style: form
          explode: true
          schema:
            type: string
        - name: organisationId
          in: query
          description: Organisation Id
          required: true
          style: form
          explode: true
          schema:
            type: string
        - name: id
          in: query
          description: File Id
          required: true
          style: form
          explode: true
          schema:
            type: string
        - name: height
          in: query
          description: Height of Graph
          required: true
          style: form
          explode: true
          schema:
            type: integer
        - name: width
          in: query
          description: width of Graph
          required: true
          style: form
          explode: true
          schema:
            type: integer
        - name: token
          in: header
          description: token is passed in header
          required: true
          style: simple
          explode: false
          schema:
            type: string
      responses:
        "200":
          description: Getting Graphs Data
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    fileIds:
                      type: array
                      items:
                        type: object
                    graphName:
                      type: string
                    isDotPlot:
                      type: boolean
                    paramX:
                      type: integer
                    paramY:
                      type: integer
                    selectedGate:
                      type: string
                    xScale:
                      type: string
                    yScale:
                      type: string
                    height:
                      type: integer
                    width:
                      type: integer
        "401":
          description: Unauthorized Errors
          content:
            text/plain:
              schema:
                type: string
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Error message
                  token:
                    type: string
  /api/canvas:
    get:
      tags:
        - Graphs-Gates
      summary: Getting Canvas
      operationId: getCanvas
      parameters:
        - name: workspaceId
          in: query
          description: Workspace Id
          required: true
          style: form
          explode: true
          schema:
            type: string
        - name: organisationId
          in: query
          description: Organisation Id
          required: true
          style: form
          explode: true
          schema:
            type: string
        - name: fileIds
          in: query
          description: File Id
          required: true
          style: form
          explode: true
          schema:
            type: string
        - name: currentFileId
          in: query
          description: File Id
          required: true
          style: form
          explode: true
          schema:
            type: string
        - name: height
          in: query
          description: Height of Graph
          required: true
          style: form
          explode: true
          schema:
            type: integer
        - name: width
          in: query
          description: width of Graph
          required: true
          style: form
          explode: true
          schema:
            type: integer
        - name: chartType
          in: query
          required: false
          style: form
          explode: true
          schema:
            type: string
        - name: paramX
          in: query
          required: true
          style: form
          explode: true
          schema:
            type: string
        - name: paramY
          in: query
          required: true
          style: form
          explode: true
          schema:
            type: string
        - name: selectedGate
          in: query
          required: true
          style: form
          explode: true
          schema:
            type: string
        - name: xScale
          in: query
          required: true
          style: form
          explode: true
          schema:
            type: string
        - name: yScale
          in: query
          required: true
          style: form
          explode: true
          schema:
            type: string
        - name: token
          in: header
          description: token is passed in header
          required: true
          style: simple
          explode: false
          schema:
            type: string
      responses:
        "200":
          description: Getting Graphs Data
          content:
            image/*:
              schema:
                type: string
                format: binary
        "401":
          description: Unauthorized Errors
          content:
            text/plain:
              schema:
                type: string
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Error message
                  token:
                    type: string

  /api/update/graph:
    post:
      tags:
        - Graphs-Gates
      summary: Update graph
      operationId: updateGraph
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                graphName:
                  type: string
                  description: Graph Name
                workspaceId:
                  type: string
                  description: Workspace Id
                graphChanges:
                  type: object
                  description: Send the updated graph object
      parameters:
        - name: token
          in: header
          description: Generate token and pass it in header
          required: true
          style: simple
          explode: false
          schema:
            type: string
      responses:
        "200":
          description: Getting Token after edit
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
        "401":
          description: Unauthorized Errors
          content:
            text/plain:
              schema:
                type: string
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Error message
                  token:
                    type: string
  /api/set/graph:
    post:
      tags:
        - Graphs-Gates
      summary: Create graph
      operationId: setGraph
      requestBody:
        content:
          application/json:
            schema:
              type: object
              description: Graph data object
      parameters:
        - name: token
          in: header
          description: Generate token and pass it in header
          required: true
          style: simple
          explode: false
          schema:
            type: string
      responses:
        "200":
          description: Getting Graph Data after adding new graph
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  description: Graph data object
        "401":
          description: Unauthorized Errors
          content:
            text/plain:
              schema:
                type: string
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Error message
                  token:
                    type: string
  /api/delete/graph:
    post:
      tags:
        - Graphs-Gates
      summary: Delete graph
      operationId: deleteGraph
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                graphName:
                  type: string
                workspaceId:
                  type: string
      parameters:
        - name: token
          in: header
          description: Generate token and pass it in header
          required: true
          style: simple
          explode: false
          schema:
            type: string
      responses:
        "200":
          description: Getting token
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
        "401":
          description: Unauthorized Errors
          content:
            text/plain:
              schema:
                type: string
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Error message
                  token:
                    type: string
  /api/set/gate:
    get:
      tags:
        - Graphs-Gates
      summary: Setting Gate
      operationId: setGate
      parameters:
        - name: workspaceId
          in: query
          description: Workspace Id
          required: true
          style: form
          explode: true
          schema:
            type: string
        - name: organisationId
          in: query
          description: organisation Id
          required: true
          style: form
          explode: true
          schema:
            type: string
        - name: id
          in: query
          description: file Id
          required: true
          style: form
          explode: true
          schema:
            type: string
        - name: gateNameUser
          in: query
          required: true
          style: form
          explode: true
          schema:
            type: string
        - name: gatingCoords
          in: query
          required: true
          style: form
          explode: true
          schema:
            type: object
            properties:
              x:
                type: integer
              y:
                type: integer
        - name: paramX
          in: query
          required: true
          style: form
          explode: true
          schema:
            type: integer
        - name: paramY
          in: query
          required: true
          style: form
          explode: true
          schema:
            type: integer
        - name: parent
          in: query
          required: true
          style: form
          explode: true
          schema:
            type: string
        - name: yScale
          in: query
          required: true
          style: form
          explode: true
          schema:
            type: string
        - name: xScale
          in: query
          required: true
          style: form
          explode: true
          schema:
            type: string
        - name: width
          in: query
          required: true
          style: form
          explode: true
          schema:
            type: integer
        - name: height
          in: query
          required: true
          style: form
          explode: true
          schema:
            type: integer
        - name: token
          in: header
          description: token is passed in header
          required: true
          style: simple
          explode: false
          schema:
            type: string
      responses:
        "200":
          description: Getting Gates
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  description: Gates objects
        "401":
          description: Unauthorized Errors
          content:
            text/plain:
              schema:
                type: string
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Error message
                  token:
                    type: string
  /api/set/quadgate:
    get:
      tags:
        - Graphs-Gates
      summary: Quad Gate
      operationId: quadGate
      parameters:
        - name: organisationId
          in: query
          description: organisation Id
          required: true
          style: form
          explode: true
          schema:
            type: string
        - name: id
          in: query
          description: file Id
          required: true
          style: form
          explode: true
          schema:
            type: string
        - name: coordX
          in: query
          required: true
          style: form
          explode: true
          schema:
            type: integer
        - name: coordY
          in: query
          required: true
          style: form
          explode: true
          schema:
            type: integer
        - name: paramX
          in: query
          required: true
          style: form
          explode: true
          schema:
            type: integer
        - name: paramY
          in: query
          required: true
          style: form
          explode: true
          schema:
            type: integer
        - name: parent
          in: query
          required: true
          style: form
          explode: true
          schema:
            type: string
        - name: yScale
          in: query
          required: true
          style: form
          explode: true
          schema:
            type: string
        - name: xScale
          in: query
          required: true
          style: form
          explode: true
          schema:
            type: string
        - name: width
          in: query
          required: true
          style: form
          explode: true
          schema:
            type: integer
        - name: height
          in: query
          required: true
          style: form
          explode: true
          schema:
            type: integer
        - name: token
          in: header
          description: token is passed in header
          required: true
          style: simple
          explode: false
          schema:
            type: string
      responses:
        "200":
          description: Getting Gates
          content:
            application/json:
              schema:
                type: object
                properties:
                  gateName:
                    type: string
                  token:
                    type: string

        "401":
          description: Unauthorized Errors
          content:
            text/plain:
              schema:
                type: string
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Error message
                  token:
                    type: string

components:
  schemas:
    body:
      required:
        - email
        - password
      type: object
      properties:
        email:
          type: string
        password:
          type: string
    inline_response_200:
      type: object
      properties:
        token:
          type: string
        userDetails:
          type: object
          properties:
            organisationId:
              type: string
            availableUntil:
              type: string
            totalNumFilesPaidFor:
              type: integer
            totalFilesUploaded:
              type: integer
    inline_response_400:
      type: object
      properties:
        message:
          type: string
        token:
          type: string
    body_1:
      required:
        - email
        - g_recaptcha_response
        - location
        - organisation
        - password
      type: object
      properties:
        location:
          type: string
        organisation:
          type: string
        email:
          type: string
        password:
          type: string
        g_recaptcha_response:
          type: string
    inline_response_200_1:
      type: object
      properties:
        message:
          type: string
    inline_response_200_2:
      type: object
      properties:
        token:
          type: string
        workspaces:
          type: array
          items:
            type: object
            properties:
              id:
                type: string
                description: workspace id
              name:
                type: string
                description: workspace name
              createdOn:
                type: string
                description: workspace created date
              isOwner:
                type: boolean
              isPrivate:
                type: boolean
              noAccepted:
                type: boolean
              owner:
                type: string
                description: Email of user
    ExperimentDetailView:
      type: object
      properties:
        device:
          type: string
        cellType:
          type: string
        particleSize:
          type: string
        fluorophoresCategory:
          type: string
        description:
          type: string

    ExperimentPayload:
      type: object
      properties:
        details:
          $ref: "#/components/schemas/ExperimentDetailView"
        data:
          type: object
